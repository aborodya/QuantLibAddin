
// FIXME - this file needs to be autogenerated

#ifndef qla_loop_hpp
#define qla_loop_hpp

#include <boost/bind.hpp>

namespace QuantLibAddin {

    // qlIMMdate

    typedef     boost::_bi::bind_t<
                QuantLib::Date,
                QuantLib::Date (__cdecl*)(
                    const std::string&,
                    const QuantLib::Date&),
                boost::_bi::list2<
                    boost::arg<1>,
                    boost::_bi::value<QuantLib::Date> > >
                qlIMMdateBind;

    // qlIMMcode

    typedef     boost::_bi::bind_t<
                std::string,
                std::string (__cdecl*)(
                    const QuantLib::Date&),
                boost::_bi::list1<
                    boost::arg<1> > >
                qlIMMcodeBind;

    // qlCalendarAdjust

    typedef     boost::_bi::bind_t<
                QuantLib::Date,
                boost::_mfi::cmf2<
                    QuantLib::Date,
                    QuantLib::Calendar,
                    const QuantLib::Date&,
                    QuantLib::BusinessDayConvention>,
                boost::_bi::list3<
                    boost::_bi::value<QuantLib::Calendar >,
                    boost::arg<1>,
                    boost::_bi::value<QuantLib::BusinessDayConvention> > >
                qlCalendarAdjustBind;

    typedef     QuantLib::Date 
                (QuantLib::Calendar::* qlCalendarAdjustSignature)(
                    const QuantLib::Date&,
                    QuantLib::BusinessDayConvention) const;
    // qlCalendarAdvance

    typedef     boost::_bi::bind_t<
                QuantLib::Date,
                boost::_mfi::cmf4<
                    QuantLib::Date,
                    QuantLib::Calendar,
                    const QuantLib::Date&,
                    const QuantLib::Period&,
                    QuantLib::BusinessDayConvention,
                    bool>,
                boost::_bi::list5<
                    boost::_bi::value<QuantLib::Calendar >,
                    boost::_bi::value<QuantLib::Date>,
                    boost::arg<1>,
                    boost::_bi::value<QuantLib::BusinessDayConvention>,
                    boost::_bi::value<bool> > >
                qlCalendarAdvanceBind;

    typedef     QuantLib::Date 
                (QuantLib::Calendar::* qlCalendarAdvanceSignature)(
                    const QuantLib::Date&,
                    const QuantLib::Period&,
                    QuantLib::BusinessDayConvention,
                    bool) const;

    // qlCalendarIsEndOfMonth

    typedef     boost::_bi::bind_t<
                bool,
                boost::_mfi::cmf1<
                    bool,
                    QuantLib::Calendar,
                    const QuantLib::Date&>,
                boost::_bi::list2<
                    boost::_bi::value<QuantLib::Calendar >,
                    boost::arg<1> > >
                qlCalendarIsEndOfMonthBind;

    typedef     bool 
                (QuantLib::Calendar::* qlCalendarIsEndOfMonthSignature)(
                    const QuantLib::Date&) const;

    // qlCalendarEndOfMonth

    typedef     boost::_bi::bind_t<
                QuantLib::Date,
                boost::_mfi::cmf1<
                    QuantLib::Date,
                    QuantLib::Calendar,
                    const QuantLib::Date&>,
                boost::_bi::list2<
                    boost::_bi::value<QuantLib::Calendar >,
                    boost::arg<1> > >
                qlCalendarEndOfMonthBind;

    typedef     QuantLib::Date 
                (QuantLib::Calendar::* qlCalendarEndOfMonthSignature)(
                    const QuantLib::Date&) const;

    // qlDayCounterYearFraction

    typedef     boost::_bi::bind_t<
                double,
                boost::_mfi::cmf4<
                    double,
                    QuantLib::DayCounter,
                    const QuantLib::Date&,
                    const QuantLib::Date&,
                    const QuantLib::Date&,
                    const QuantLib::Date&>,
                boost::_bi::list5<
                    boost::_bi::value<QuantLib::DayCounter >,
                    boost::_bi::value<QuantLib::Date>,
                    boost::arg<1>,
                    boost::_bi::value<QuantLib::Date>,
                    boost::_bi::value<QuantLib::Date> > >
                qlDayCounterYearFractionBind;

    typedef     double 
                (QuantLib::DayCounter::* qlDayCounterYearFractionSignature)(
                    const QuantLib::Date&,
                    const QuantLib::Date&,
                    const QuantLib::Date&,
                    const QuantLib::Date&) const;

    // qlASXIsASXcode

    typedef     boost::_bi::bind_t<
                bool,
                bool (__cdecl*)(
                    const std::string&,
                    bool),
                boost::_bi::list2<
                    boost::arg<1>,
                    boost::_bi::value<bool> > >
                qlASXisASXcodeBind;

    // qlIndexAddFixings2

    /*typedef     boost::_bi::bind_t<
                void,
                boost::_mfi::mf2<
                    void,
                    QuantLib::Index,
                    const QuantLib::TimeSeriesDef&,
                    bool>,
                boost::_bi::list3<
                    boost::_bi::value<boost::shared_ptr<QuantLib::Index> >,
                    boost::arg<1>,
                    boost::_bi::value<bool> > >
                qlIndexAddFixings2Bind;

    typedef     void 
                (QuantLib::Index::* qlIndexAddFixings2Signature)(
                    const QuantLib::TimeSeriesDef&,
                    bool);*/

    // qlIndexFixing

    typedef     boost::_bi::bind_t<
                QuantLib::Real,
                boost::_mfi::cmf2<
                    QuantLib::Real,
                    QuantLib::Index,
                    const QuantLib::Date&,
                    bool>,
                boost::_bi::list3<
                    boost::_bi::value<boost::shared_ptr<QuantLib::Index> >,
                    boost::arg<1>,
                    boost::_bi::value<bool> > >
                qlIndexFixingBind;

    typedef     QuantLib::Real 
                (QuantLib::Index::* qlIndexFixingSignature)(
                    const QuantLib::Date&,
                    bool) const;

    // qlIndexIsValidFixingDate

    typedef     boost::_bi::bind_t<
                bool,
                boost::_mfi::cmf1<
                    bool,
                    QuantLib::Index,
                    const QuantLib::Date&>,
                boost::_bi::list2<
                    boost::_bi::value<boost::shared_ptr<QuantLib::Index> >,
                    boost::arg<1> > >
                qlIndexIsValidFixingDateBind;

    typedef     bool 
                (QuantLib::Index::* qlIndexIsValidFixingDateSignature)(
                    const QuantLib::Date&) const;

    // qlInterestRateIndexFixingDate

    typedef     boost::_bi::bind_t<
                QuantLib::Date,
                boost::_mfi::cmf1<
                    QuantLib::Date,
                    QuantLib::InterestRateIndex,
                    const QuantLib::Date&>,
                boost::_bi::list2<
                    boost::_bi::value<boost::shared_ptr<QuantLib::InterestRateIndex> >,
                    boost::arg<1> > >
                qlInterestRateIndexFixingDateBind;

    typedef     QuantLib::Date 
                (QuantLib::InterestRateIndex::* qlInterestRateIndexFixingDateSignature)(
                    const QuantLib::Date&) const;

    // qlInterestRateIndexMaturity

    typedef     boost::_bi::bind_t<
                QuantLib::Date,
                boost::_mfi::cmf1<
                    QuantLib::Date,
                    QuantLib::InterestRateIndex,
                    const QuantLib::Date&>,
                boost::_bi::list2<
                    boost::_bi::value<boost::shared_ptr<QuantLib::InterestRateIndex> >,
                    boost::arg<1> > >
                qlInterestRateIndexMaturityBind;

    typedef     QuantLib::Date 
                (QuantLib::InterestRateIndex::* qlInterestRateIndexMaturitySignature)(
                    const QuantLib::Date&) const;

    // qlInterestRateIndexValueDate

    typedef     boost::_bi::bind_t<
                QuantLib::Date,
                boost::_mfi::cmf1<
                    QuantLib::Date,
                    QuantLib::InterestRateIndex,
                    const QuantLib::Date&>,
                boost::_bi::list2<
                    boost::_bi::value<boost::shared_ptr<QuantLib::InterestRateIndex> >,
                    boost::arg<1> > >
                qlInterestRateIndexValueDateBind;

    typedef     QuantLib::Date 
                (QuantLib::InterestRateIndex::* qlInterestRateIndexValueDateSignature)(
                    const QuantLib::Date&) const;
}

#endif

